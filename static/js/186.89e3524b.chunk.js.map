{"version":3,"file":"static/js/186.89e3524b.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","components/Section/styled.js","components/Section/Section.jsx","utils/fetch-functions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'utils/fetch-functions';\nimport Loader from 'components/Loader/Loader';\nimport Section from 'components/Section/Section';\n\nconst Reviews = () => {\n  const { movieID } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const movie = await fetchMovieReviews(movieID);\n        setReviews(movie);\n        setIsLoading(false);\n      } catch (error) {}\n    };\n\n    fetchData();\n  }, [movieID]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews && (\n        <Section title=\"Reviews\">\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </Section>\n      )}\n      {reviews && reviews.length === 0 && <div>No reviews for this movie</div>}\n    </>\n  );\n};\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  margin: 10px 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyled } from './styled';\n\nconst Section = ({ title = null, children }) => {\n  return (\n    <SectionStyled>\n      {title && <h2>{title}</h2>}\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '576d66aa4628b8c5efd23313b6537b33';\n\nconst searchParams = new URLSearchParams({\n  api_key: API_KEY,\n  language: 'en-US',\n});\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?${searchParams}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?${searchParams}`);\n  return response.data;\n};\n\nexport const searchMovies = async movieName => {\n  const params = new URLSearchParams(searchParams);\n  params.append('query', movieName);\n  const response = await axios.get(`/search/movie?${params}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?${searchParams}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?${searchParams}`);\n  return response.data.results;\n};\n"],"names":["movieID","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieReviews","sent","t0","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","Section","title","map","review","author","content","id","length","SectionStyled","styled","_templateObject","_taggedTemplateLiteral","_ref$title","axios","searchParams","URLSearchParams","api_key","language","fetchTrendingMovies","response","concat","abrupt","data","results","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x","searchMovies","_ref3","_callee3","movieName","params","_context3","append","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}